services:
  postgres:
    image: postgres:16-alpine
    container_name: livestore-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: livestore
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - livestore-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  fastapi:
    build: 
      context: .
      dockerfile: ./apps/server/Dockerfile
    container_name: livestore-fastapi
    env_file:
      - .env
    environment:
      DATABASE_URL: postgresql://postgres:password@postgres:5432/livestore
      AUTH_TOKEN: ${AUTH_TOKEN:-insecure-token-change-me}
      ADMIN_SECRET: ${ADMIN_SECRET:-change-me-admin-secret}
      JWT_SECRET: ${JWT_SECRET:-change-me-jwt-secret-key-256-bit}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-change-me-jwt-refresh-secret-256-bit}
      JWT_ACCESS_EXPIRY: ${JWT_ACCESS_EXPIRY:-15}
      JWT_REFRESH_EXPIRY: ${JWT_REFRESH_EXPIRY:-7}
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      PORT: 8000
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - livestore-network
    volumes:
      - ./apps/server/app:/app/app # For development hot-reload

  client:
    build: 
      context: ./apps/client
      dockerfile: Dockerfile
    container_name: livestore-client
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "5173:5173"
    networks:
      - livestore-network
    volumes:
      - ./apps/client:/app
      - /app/node_modules
    command: npm run dev

  admin-client:
    build:
      context: ./apps/admin-client
      dockerfile: Dockerfile
    container_name: livestore-admin
    environment:
      VITE_API_URL: http://localhost:8000
    ports:
      - "5174:5173"
    networks:
      - livestore-network
    volumes:
      - ./apps/admin-client:/app
      - /app/node_modules
    command: npm run dev

  caddy:
    image: caddy:2-alpine
    container_name: livestore-caddy
    ports:
      - "80:80"
      - "3000:3000"
      - "3001:3001"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - fastapi
      - client
      - admin-client
    networks:
      - livestore-network

networks:
  livestore-network:
    driver: bridge

volumes:
  postgres_data:
  caddy_data:
  caddy_config:
